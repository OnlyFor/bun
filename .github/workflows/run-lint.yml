name: Lint

permissions:
  contents: read

env:
  LLVM_VERSION: 16

on:
  workflow_call:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    outputs:
      text_output: ${{ steps.lint.outputs.text_output }}
      json_output: ${{ steps.lint.outputs.json_output }}
      count: ${{ steps.lint.outputs.count }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: ./.github/actions/setup-bun
        with:
          bun-version: "1.1.3"
      - name: Install Dependencies
        run: |
          bun --cwd=packages/bun-internal-test install
      - name: Lint
        id: lint
        run: |
          bun packages/bun-internal-test/src/linter.ts

  lint-cpp:
    name: Lint C++
    runs-on: ${{ github.repository_owner == 'oven-sh' && 'namespace-profile-bun-ci-darwin-aarch64' || 'macos-12' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Bun
        uses: ./.github/actions/setup-bun
        with:
          bun-version: latest
      - name: Install Dependencies
        env:
          HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
        run: |
          brew install \
            llvm@${{ env.LLVM_VERSION }} \
            ninja \
            coreutils \
            openssl@1.1 \
            libiconv \
            gnu-sed --force --overwrite
          echo "$(brew --prefix coreutils)/libexec/gnubin" >> $GITHUB_PATH
          echo "$(brew --prefix llvm@$LLVM_VERSION)/bin" >> $GITHUB_PATH
          brew link --overwrite llvm@$LLVM_VERSION
      - name: Bun install
        run: |
          bun install
      - name: Format
        env:
          CPU_TARGET: native
        run: |
          bun build:tidy
      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Apply formatting changes
