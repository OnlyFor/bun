name: Lint

permissions:
  contents: read
  actions: write
  pull-requests: write

env:
  LLVM_VERSION: 16

on:
  workflow_call:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    outputs:
      text_output: ${{ steps.lint.outputs.text_output }}
      json_output: ${{ steps.lint.outputs.json_output }}
      count: ${{ steps.lint.outputs.count }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: ./.github/actions/setup-bun
        with:
          bun-version: "1.1.3"
      - name: Install Dependencies
        run: |
          bun --cwd=packages/bun-internal-test install
      - name: Lint
        id: lint
        run: |
          bun packages/bun-internal-test/src/linter.ts

  lint-cpp:
    name: Lint C++
    runs-on: ${{ github.repository_owner == 'oven-sh' && 'namespace-profile-bun-ci-darwin-aarch64' || 'macos-12' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Bun
        uses: ./.github/actions/setup-bun
        with:
          bun-version: latest
      - name: Install Dependencies
        env:
          HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
        run: |
          brew install \
            llvm@${{ env.LLVM_VERSION }} \
            ninja \
            coreutils \
            openssl@1.1 \
            libiconv \
            gnu-sed --force --overwrite
          echo "$(brew --prefix coreutils)/libexec/gnubin" >> $GITHUB_PATH
          echo "$(brew --prefix llvm@$LLVM_VERSION)/bin" >> $GITHUB_PATH
          brew link --overwrite llvm@$LLVM_VERSION
      - name: Bun install
        run: |
          bun install
      - name: Format
        id: format
        env:
          CPU_TARGET: native
        run: |
          rm -f did_fail format.log
          echo 'wow such fail' > format.log
          echo 1 > did_fail
          # bun build:tidy &2>1 | tee format.log || echo 1 > did_fail
          # Upload format.log as github artifact for the workflow
          echo "text_output=$(cat format.log || echo 0)" >> $GITHUB_OUTPUT
          echo "did_fail=$(cat did_fail || echo 0)" >> $GITHUB_OUTPUT
      - name: Find Comment
        id: comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: github-actions[bot]
          body-includes: <!-- generated-comment workflow=${{ github.workflow }} -->
      - name: Update Comment
        uses: peter-evans/create-or-update-comment@v4
        if: steps.format.outputs.did_fail == '1'
        with:
          comment-id: ${{ steps.comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            @${{ github.actor }}, C++ linting failed!

            Logs:
            ```cpp
            ${{ steps.format.outputs.text_output }}
            ```

            <!-- generated-comment workflow=${{ github.workflow }} -->
          edit-mode: replace
      - name: Update Previous Comment
        uses: peter-evans/create-or-update-comment@v4
        if: steps.format.outputs.did_fail == '0' && steps.comment.outputs.comment-id != ''
        with:
          comment-id: ${{ steps.comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            @${{ github.actor }}, C++ lint errors fixed! Thank you.

            <!-- generated-comment workflow=${{ github.workflow }} -->
          edit-mode: replace
      - name: Update Discord
        uses: sarisia/actions-status-discord@v1
        if: steps.format.outputs.did_fail == '1'
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          nodetail: true
          color: "#FF0000"
          title: ""
          description: |
            ### ❌ [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})

            @${{ github.actor }}, C++ linting failed!

            ```cpp
            ${{steps.format.outputs.text_output}}
            ```
 